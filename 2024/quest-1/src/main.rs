fn main() {
    let p1 = part_one("AACBCCAACCCACABBAABBAABBBBCCCCABBACABCABCCBBCAAACBBACABAAACCCBBBACBCCACBCCACAACBAACCBCACBCABAABBACBCAACBBCBBBABCCBCCBCAAACCCCABBABABAABBABACCAABBCCABAABCBABCCACCBACCBABBCAAACBABBAACCCCCBACABCAABCCBBBCAAAACCBCABCCBBBAAABABBCAACCABACCABBACCBAABCCABCACBBBACBACACCAACACCACCBBCCBACACBCCBCCBBCCACAAABABBCCBBCCABCACCABACABBBBABBACBCBBAAABBBCCCAABCCCAAAACCBCAABAABBCCACBCCCBCBBBBABBACCBCCCACCAAABBAACACABBAACAACACBABABCAABCBAABAABBACACABABABCACCBCCAACBAACCCCBBBBCBAAABAACBBCBBAAACBCCAAAAABBCACCCCABBBABCBABBBABBCCBACABCACCCACBBBABACBABABACCBAACBCABBACCCBBCABCCAABAAAACCBABABABCCBABBABCCCBCCABAACACCACBCAACAACCCAABABABBACCCCBABBCCBCBCBACBABCBBBBACCACBACAABBBCACCACBCABBCBCCACCBACBBACBBCCCAACABCBCCCCCBBCCABCACBACBCCABCAABCAACBBABAACBBACCAAAACACCABCBBCABCCAABAABBCABCCAAACABCBBACCCCBBBACBCCBAACBABAACBBBCCBBCCBBABBACBBAABCBBCBAAAABACBCBABCBCBACBBBBBAAACACBCCCCBACBACCAACACABCCBBACBBABCACACCBBAABAACBBABCCCABBABCAAAAABCBCCBCAABAABCCACCCCCABBBBBCCAACBCBBCAAACBAAAAAACAABCAABBABBABCAAABBABACCAAACCAAACCACCABCCAABC");
    // let p2 = part_two("AxBCDDCAxD");

    println!("Part 1: {p1}")
}

fn part_one(input: &str) -> i32 {
    let list = input.split("");

    let mut potions = 0;

    for creature in list {
        if creature == "\n" {
            continue;
        }

        let mut potions_needed = 0;

        if creature == "A" {
            potions_needed = 0
        }
        if creature == "B" {
            potions_needed = 1
        }
        if creature == "C" {
            potions_needed = 3
        }

        potions += potions_needed
    }

    potions
}

// fn part_two(input: &str) {
//     // iterate list, add char to slice, when slice contains 2 chars add to listPairs
//
//     let list = input.split("");
//
//     let pairs: Vec<&str> = Vec::new();
// }

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_part_one() {
        let result = part_one("ABBAC");
        assert_eq!(result, 5);
    }
}
